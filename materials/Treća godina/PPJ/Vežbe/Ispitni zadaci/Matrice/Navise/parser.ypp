%{

#include <iostream>
#include <cstdlib>
#include <map>

using namespace std;

#include "matrix.hpp"

extern int yylex();

void yyerror(string s) {
    cerr << "Sintaksna greska: " << s << endl;
    exit(EXIT_FAILURE);
}

map<string, Matrix*> promenljive;

void deinicijalizuj() {
    for(auto it = promenljive.begin(); it != promenljive.end(); it++)
        delete it->second;
}

%}

%union {
    double x;
    string* ime;
    Matrix* m;
    vector<double>* v;
}

%left '+' '-'
%left '*' SKMN
%right UMINUS
%left '\''

%token<x> BROJ
%token<ime> ID

%type<m> izraz matrica niz_vrsta
%type<v> vrsta

%start program

%%

program: program naredba                    {}
    | naredba                               {}
    ;
naredba: ID '=' izraz ';' '\n'              {   auto it = promenljive.find(*$1);
                                                if(it != promenljive.end())
                                                    delete it->second;
                                                promenljive[*$1] = $3;
                                                delete $1; }
    | ID '=' izraz '\n'                     {   auto it = promenljive.find(*$1);
                                                if(it != promenljive.end())
                                                    delete it->second;
                                                promenljive[*$1] = $3;
                                                cout << *$1 << " = " << endl << *$3 << endl;
                                                delete $1; }
    ;
izraz: izraz '+' izraz                      {   $$ = (*$1) + (*$3);
                                                if($$ == NULL)
                                                    yyerror("Nesaglasne dimenzije");
                                                delete $1;
                                                delete $3; }
    | izraz '-' izraz                       {   $$ = (*$1) - (*$3);
                                                if($$ == NULL)
                                                    yyerror("Nesaglasne dimenzije");
                                                delete $1;
                                                delete $3; }
    | izraz '*' izraz                       {   $$ = (*$1) * (*$3);
                                                if($$ == NULL)
                                                    yyerror("Nesaglasne dimenzije");
                                                delete $1;
                                                delete $3; }
    | izraz SKMN izraz                      {   $$ = $1->scalarMultiply(*$3);
                                                if($$ == NULL)
                                                    yyerror("Nesaglasne dimenzije");
                                                delete $1;
                                                delete $3; }
    | '-' izraz %prec UMINUS                {   $$ = -(*$2);
                                                delete $2; }
    | izraz '\''                            {   $$ = $1->transpose();
                                                delete $1; }
    | '(' izraz ')'                         {   $$ = $2; }
    | ID                                    {   auto it = promenljive.find(*$1);
                                                if(it == promenljive.end())
                                                    yyerror("Ne postoji promenljiva");
                                                $$ = new Matrix(*(it->second));
                                                delete $1; }
    | matrica                               {   $$ = $1; }
    ;
matrica: '[' niz_vrsta ']'                  {   $$ = $2; }
    ;
niz_vrsta: niz_vrsta ';' vrsta              {   bool ret = $1->addRow(*$3);
                                                if(ret == false)
                                                    yyerror("Nesaglasne dimenzije");
                                                $$ = $1;
                                                delete $3; }
    | vrsta                                 {   $$ = new Matrix();
                                                bool ret = $$->addRow(*$1);
                                                if(ret == false)
                                                    yyerror("Nesaglasne dimenzije");
                                                delete $1; }
    ;
vrsta: vrsta BROJ                           {   $1->push_back($2);
                                                $$ = $1; }
    | BROJ                                  {   $$ = new vector<double>();
                                                $$->push_back($1); }
    ;

%%

int main() {
    if(yyparse() == 0)
        cout << "Sve ok" << endl;
    else
        cout << "Sintaksna greska" << endl;
    deinicijalizuj();
    exit(EXIT_SUCCESS);
}