%{

	#include <iostream>
	#include <cstdlib>
	#include <map>
	
	using namespace std;

	#include "polinom.hpp"
	
	extern int yylex();
	
	void yyerror(string s) {
		cerr << "Sintaksna greska: " << s << endl;
		exit(EXIT_FAILURE);
	}

	map<string, Polinom*> promenljive;

	void deinicijalizuj() {
		for(auto it = promenljive.begin(); it != promenljive.end(); it++)
			delete it->second;
	}

%}

%union {
	float v;
	string* ime;
	bool b;
	Polinom* p;
}

%left '+' '-'
%left '*'
%right UMINUS
%left '\''
%left '['

%token DODELA EQ NEQ
%token<v> BROJ
%token<ime> ID

%type<p> izraz polinom lista
%type<b> logicka_naredba

%start program

%%

program: naredba '\n' program		{	}
	|								{	}
	;
naredba: izraz						{	cout << *$1 << endl;
										delete $1; }
	| ID DODELA izraz				{	auto it = promenljive.find(*$1);
										if(it != promenljive.end())
											delete it->second;
										promenljive[*$1] = $3;
										delete $1; }
	| logicka_naredba				{	cout << $1 << endl; }
	;
izraz: izraz '+' izraz				{	$$ = *$1 + *$3;
										delete $1;
										delete $3; }
	| izraz '-' izraz				{	$$ = *$1 - *$3;
										delete $1;
										delete $3; }
	| izraz '*' izraz				{	$$ = *$1 * *$3;
										delete $1;
										delete $3; }
	| '-' izraz %prec UMINUS		{	$$ = - *$2;
										delete $2; }
	| '(' izraz ')'					{	$$ = $2; }
	| izraz '\''					{	$$ = $1->izvod();
										delete $1; }
	| '$' izraz '|' BROJ			{	$$ = $2->integral($4);
										delete $2; }
	| izraz '[' BROJ ']'			{	double x = $1->vrednostUtacki($3);
										$$ = new Polinom();
										$$->insert(x);
										delete $1; }
	| polinom						{	$$ = $1; }
	| ID							{	auto it = promenljive.find(*$1);
										if(it == promenljive.end())
											yyerror("Promenljiva nije definisana");
										$$ = new Polinom(*(it->second));
										delete $1; }
	;
logicka_naredba: izraz EQ izraz		{	$$ = *$1 == *$3;
										delete $1;
										delete $3;}
	| izraz NEQ izraz				{	$$ = *$1 != *$3;
										delete $1;
										delete $3;}
	;
polinom: '<' lista '>'				{	$$ = $2; }
	;
lista: lista ',' BROJ				{	$1->insert($3);
										$$ = $1; }
	| BROJ							{	$$ = new Polinom();
										$$->insert($1); }
	;

%%

int main() {
	if(yyparse() == 0)
		cout << "Sve ok" << endl;
	else
		cout << "Sintaksna greska" << endl;
	deinicijalizuj();
	exit(EXIT_SUCCESS);
}